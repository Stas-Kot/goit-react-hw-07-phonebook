{"version":3,"sources":["components/PhonebookForm/PhonebookForm.styles.jsx","api/api.js","redux/phonebook-operations.js","components/PhonebookForm/PhonebookForm.jsx","components/ContactListItem/ContactListItem.styles.jsx","components/ContactListItem/ContactListItem.jsx","redux/phonebook-selectors.js","components/ContactList/ContactList.jsx","redux/phonebook-actions.js","components/SearchContact/SearchContact.styles.jsx","components/SearchContact/SearchContact.jsx","App.js","redux/phonebook-reducer/filter-reducer.js","redux/phonebook-reducer/items-reducer.js","redux/phonebook-reducer/contacts-reducer.js","redux/store.js","index.js"],"names":["Form","BtnAddContact","Input","fetchContacts","a","axios","get","response","data","postContact","newContact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","api","contacts","message","addContact","item","result","condition","getState","extra","items","entities","find","savedContact","name","alert","PhonebookForm","handleSubmit","useState","setName","number","setNumber","dispatch","useDispatch","handleSetUserInfo","e","target","value","reset","autocomplete","onSubmit","preventDefault","onChange","type","pattern","title","required","ContactItem","DeleteBtn","ContactListItem","onClick","getEntities","state","getFilter","filter","getFiltredContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","ContactList","useSelector","selectors","useEffect","map","actions","setFilter","createAction","SearchTitle","SearchContact","App","filterReducer","createReducer","payload","fulfilled","loading","pending","rejected","error","itemsReducer","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1eacd19.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form`\n  width: 350px;\n  border: 2px solid black;\n  padding: 30px 15px;\n\n  & label {\n    font-weight: 500;\n  }\n  & p {\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const BtnAddContact = styled.button`\n  display: block;\n  border-radius: 8px;\n  background-color: #fff;\n  color: black;\n  font-weight: 500;\n  padding: 5px 10px;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  border-color: transparent;\n  border: 1px solid grey;\n  cursor: pointer;\n  &:hover {\n    background-color: #6ea2de;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 30px;\n  &:focus {\n    border: 2px solid #6ea2de;\n    box-shadow: 0px 0px 10px #6ea2de;\n    outline: none;\n  }\n`;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4567';\r\n\r\nexport async function fetchContacts() {\r\n  const response = await axios.get(`contacts`);\r\n  return response.data;\r\n}\r\n\r\nexport async function postContact(newContact) {\r\n  const response = await axios.post(`contacts`, newContact);\r\n  return response.data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const response = await axios.delete(`contacts/${id}`);\r\n  return response.data;\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as api from 'api/api.js';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await api.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (item, { rejectWithValue }) => {\r\n    try {\r\n      const result = await api.postContact(item);\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n  {\r\n    condition: (item, { getState, extra }) => {\r\n      const { contacts } = getState();\r\n      const state = contacts.items.entities;\r\n      if (state.find(savedContact => savedContact.name === item.name)) {\r\n        alert(`${item.name} is already in contacts`);\r\n        return false;\r\n      }\r\n    },\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await api.deleteContact(id);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Form, BtnAddContact, Input } from './PhonebookForm.styles';\nimport { addContact } from 'redux/phonebook-operations';\n\nfunction PhonebookForm({ handleSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSetUserInfo = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    const handleSubmit = contact => dispatch(addContact({ name, number }));\n    handleSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form autocomplete=\"off\" onSubmit={handleAddContact}>\n      <label>\n        <p>Name</p>\n        <Input\n          onChange={handleSetUserInfo}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          autocomplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        <p>Number</p>\n        <Input\n          onChange={handleSetUserInfo}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          autocomplete=\"off\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <BtnAddContact type=\"submit\">Add contact</BtnAddContact>\n    </Form>\n  );\n}\n\nexport default PhonebookForm;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\n  width: 400px;\n  font-size: 20px;\n  font-weight: 500;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 30px;\n  margin-right: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem, DeleteBtn } from './ContactListItem.styles';\n\nexport default function ContactListItem({ name, number, deleteContact }) {\n  return (\n    <ContactItem>\n      {name}: {number}\n      <DeleteBtn type=\"button\" onClick={deleteContact}>\n        Delete\n      </DeleteBtn>\n    </ContactItem>\n  );\n}\n\nContactListItem.propTypes = {\n  number: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getEntities = state => state.contacts.items.entities;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFiltredContacts = createSelector(\r\n  [getEntities, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getEntities,\r\n  getFilter,\r\n  getFiltredContacts,\r\n};\r\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { fetchContacts, deleteContact } from 'redux/phonebook-operations';\nimport selectors from 'redux/phonebook-selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectors.getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  handleDelete: PropTypes.func,\n};\n","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\n// const addContact = createAction('contacts/add', ({ name, number }) => ({\n//   payload: {\n//     name,\n//     number,\n//     id: uuidv4(),\n//   },\n// }));\n// const deleteContact = createAction('contacts/delete');\nconst setFilter = createAction('contacts/filter');\n// const setContacts = createAction('contacts/set');\n\nconst actions = {\n  // addContact,\n  // deleteContact,\n  setFilter,\n  // setContacts,\n};\nexport default actions;\n","import styled from '@emotion/styled/macro';\n\nexport const SearchTitle = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  margin: 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport { SearchTitle } from './SearchContact.styles';\nimport selectors from 'redux/phonebook-selectors';\n\nexport default function SearchContact() {\n  const value = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <SearchTitle>Find contacts by name</SearchTitle>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(actions.setFilter(e.target.value))}\n      />\n    </label>\n  );\n}\n","import PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport SearchContact from 'components/SearchContact/SearchContact';\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <PhonebookForm />\n\n      <h2>Contacts</h2>\n      <SearchContact />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport actions from '../phonebook-actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.setFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from 'redux/phonebook-operations';\n\nexport const entities = createReducer([], {\n  [fetchContacts.fulfilled]: (state, { payload }) => [...state, ...payload],\n  [addContact.fulfilled]: (state, { payload }) =>\n    state.find(({ name }) => name === payload.name)\n      ? (alert(`${payload.name} is already in contacts`), [...state])\n      : [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n});\n\nexport const error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n});\n","import { combineReducers } from 'redux';\r\nimport filterReducer from './filter-reducer';\r\nimport { entities, loading, error } from './items-reducer';\r\n\r\nconst itemsReducer = combineReducers({\r\n  entities,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import { createStore, combineReducers, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import thunk from 'redux-thunk';\n\nimport contactsReducer from './phonebook-reducer/contacts-reducer';\n\n// import items from 'redux/slices/items';\n// import filter from 'redux/slices/filter';\n\n// const contactsReducer = {\n//   items,\n//   filter,\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(\n//   rootReducer,\n//   composeWithDevTools(applyMiddleware(logger, thunk)),\n// );\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}